VPATH := %VPATH%

RUSTC ?= rustc
RUST_DIRS := -L . -L $(VPATH)/rust-phf/build

RUSTC_CMD := $(RUSTC) $(RUST_DIRS) $(RUSTFLAGS)

LIB_TOP_SRC := $(VPATH)/src/lib.rs
LIB_ALL_SRC := $(shell find $(VPATH)/src -type f -name '*.rs')
LIB         := $(shell $(RUSTC) --crate-file-name "$(LIB_TOP_SRC)")

MACROS_TOP_SRC := $(VPATH)/macros/lib.rs
MACROS_ALL_SRC := $(shell find $(VPATH)/macros -type f -name '*.rs')
MACROS         := $(shell $(RUSTC) --crate-file-name "$(MACROS_TOP_SRC)")

EXT_TEST_TOP_SRC := $(VPATH)/test/lib.rs
EXT_TEST_ALL_SRC := $(shell find $(VPATH)/test -type f -name '*.rs')

EXT_BENCH_TOP_SRC := $(VPATH)/bench/lib.rs
EXT_BENCH_ALL_SRC := $(shell find $(VPATH)/bench -type f -name '*.rs')

TEST_JSON_SRC := $(shell find $(VPATH)/html5lib-tests/ -type f -name '*.test')

LIB_DEPS := $(MACROS) $(LIB_ALL_SRC)

.PHONY: all
all: $(LIB) tokenize-example tokenize-bench-example

$(MACROS): $(MACROS_ALL_SRC)
	$(RUSTC_CMD) $(MACROS_TOP_SRC)

$(LIB): $(LIB_DEPS)
	$(RUSTC_CMD) $(LIB_TOP_SRC)

tokenize-example: $(VPATH)/examples/tokenize-example.rs $(LIB)
	$(RUSTC_CMD) $<

tokenize-bench-example: $(VPATH)/examples/tokenize-bench-example.rs $(LIB)
	$(RUSTC_CMD) $<

# Workaround for mozilla/rust#13064; see preprocess-tests.py
test-json/tokenizer: $(TEST_JSON_SRC) $(VPATH)/scripts/preprocess-tests.py
	mkdir -p $@
	$(VPATH)/scripts/preprocess-tests.py $(VPATH)/html5lib-tests $@

# Run #[test] functions
html5-test: $(LIB_DEPS)
	$(RUSTC_CMD) -o $@ --test $(LIB_TOP_SRC)

# Run external tests loaded from JSON
html5-external-test: $(EXT_TEST_ALL_SRC) $(LIB) test-json/tokenizer
	$(RUSTC_CMD) $(EXT_TEST_TOP_SRC)

# Run benchmarks
html5-external-bench: $(EXT_BENCH_ALL_SRC) $(LIB)
	$(RUSTC_CMD) $(EXT_BENCH_TOP_SRC)

.PHONY: check
check: check-internal check-external

.PHONY: check-internal
check-internal: html5-test
	./html5-test

.PHONY: check-external
check-external: html5-external-test
	./html5-external-test

METRICS ?= metrics.json

.PHONY: bench
bench: html5-external-bench
	./html5-external-bench --bench --save-metrics $(METRICS)

.PHONY: clean
clean:
	rm -f *.o *.a *.so *.dylib *.dll *-test *-bench *-example
	rm -rf test-json
